name: tx

on:
  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: Environment
        required: true
        options:
          - fantom_testnet
          - axon-alphanet
          - testnet
          - alphanet
      jmeterJmx:
        type: choice
        description: Make a choice of jmx
        required: true
        options:
          - nativeTransfer.jmx
          - swap.jmx
      mnemonic:
        type: string
        description: Mnemonic
        required: true
        default: "test test test test test test test test test test test junk"
      gistId:
        description: 'Gist ID'
        required: false
        default: 'bd29348042f0f1f8998728895dea3e65'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Set rpcUrl, wsUrl, and gasPrice environment variables
        run: |
          case "${{ github.event.inputs.env }}" in
            "fantom_testnet")
              echo "rpcUrl=https://rpc.testnet.fantom.network" >> $GITHUB_ENV
              echo "wsUrl=wss://fantom-testnet.public.blastapi.io/" >> $GITHUB_ENV
              echo "gasPrice=1050000000" >> $GITHUB_ENV
              echo "to=0x7C7087d81c5f4Bd7EA30A5e13095414395DfD4F1" >> $GITHUB_ENV
              echo "payload=0x7ff36ab50000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000008000000000000000000000000079026e949ba3ef5c854186244d1597a369bc326d00000000000000000000000000000000000000000000000000005af3107a3fff0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000a6465996d9b1c6e82a65d4503d07ee1f68ed3a34000000000000000000000000a37614c751f37cbc54c5223254e8695024fa36c7" >> $GITHUB_ENV
              ;;
            "axon-alphanet")
              echo "rpcUrl=https://rpc-alphanet-axon.ckbapp.dev" >> $GITHUB_ENV
              echo "wsUrl=ws://rpc-alphanet-axon.ckbapp.dev/ws" >> $GITHUB_ENV
              echo "gasPrice=8" >> $GITHUB_ENV
              echo "to=0xf25eC598F757082A3A2A813b872B2738b56FCa8f" >> $GITHUB_ENV
              echo "payload=0x7ff36ab5000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000800000000000000000000000008afacb349e19abd7cee782142f240cdf9df252d100000000000000000000000000000000000000000000000000005af3107a3fff00000000000000000000000000000000000000000000000000000000000000020000000000000000000000009213ea93c4e6a6a8fc5b77ff1a169f65d509f50f00000000000000000000000092bbd67e1357ad30386cf2e4cc832e4e7f74fe79" >> $GITHUB_ENV
              ;;
            "testnet")
              echo "rpcUrl=https://v1.testnet.godwoken.io/rpc" >> $GITHUB_ENV
              echo "wsUrl=wss://v1.testnet.godwoken.io/ws" >> $GITHUB_ENV
              echo "gasPrice=60000000000" >> $GITHUB_ENV
              echo "to=0x5bf585570316838d5572212f0909074df4f73988" >> $GITHUB_ENV
              echo "payload=0x7ff36ab5000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000800000000000000000000000003499932d7a1d1850253d6c66d830e3524bb3f2a700000000000000000000000000000000000000000000000000005af3107a3fff00000000000000000000000000000000000000000000000000000000000000020000000000000000000000003ab7965043506c8917ed4c2492f32904b2894e780000000000000000000000005b273272be0ca76dfd74a368d4f9e38168d437c3" >> $GITHUB_ENV
              ;;
            "alphanet")
              echo "rpcUrl=https://godwoken-alphanet-v1.ckbapp.dev" >> $GITHUB_ENV
              echo "wsUrl=wss://gw-alphanet-v1.godwoken.cf/ws" >> $GITHUB_ENV
              echo "gasPrice=1" >> $GITHUB_ENV
              echo "to=0x3B4D1c4EbB2a6b160f095b2f8ABae841AA6431c8" >> $GITHUB_ENV
              echo "payload=0x7ff36ab500000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000080000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb9226600000000000000000000000000000000000000000000000000005af3107a3fff00000000000000000000000000000000000000000000000000000000000000020000000000000000000000008037bf2e6d72ae53ef8f88cc9cc09b9d058c5bb4000000000000000000000000e0196b7b2b43b6bde7d05e9ab2d9ade7d42b2e34" >> $GITHUB_ENV
              ;;
            *)
              echo "Invalid environment specified."
              exit 1
              ;;
          esac

      - name: Start EthStats workflow
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          curl -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.actor }}/eth-performance/actions/workflows/ethStats.yml/dispatches \
            -d '{"ref":"main", "inputs": {"jarArg": "${{ env.wsUrl }}", "gistId": "${{ github.event.inputs.gistId }}"}}'

      - name: Build with Maven
        run: mvn clean package --file pom.xml -q

      - name: jmeter run
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GIST_ID: ${{ github.event.inputs.gistId }}
        run: |
          update_gist() {
            cmd=$1
            JSON_DATA=$(printf '{"description": "Updated gist","files": {"commands.txt": {"content": "%s"}}}' "$cmd")
            curl -X PATCH -H "Authorization: token $GH_TOKEN" https://api.github.com/gists/$GIST_ID -d "${JSON_DATA}"
          }
          update_gist "tps"
          echo "rpcUrl: ${{ env.rpcUrl }}"
          echo "wsUrl: ${{ env.wsUrl }}"
          echo "gasPrice: ${{ env.gasPrice }}"
          sed -i 's|<stringProp name="Argument.value">rpcUrlValue</stringProp>|<stringProp name="Argument.value">${{ env.rpcUrl }}</stringProp>|g' src/test/jmeter/${{ github.event.inputs.jmeterJmx }}
          sed -i 's|<stringProp name="Argument.value">gasPriceValue</stringProp>|<stringProp name="Argument.value">${{ env.gasPrice }}</stringProp>|g' src/test/jmeter/${{ github.event.inputs.jmeterJmx }}
          sed -i 's|<stringProp name="Argument.value">mnemonicValue</stringProp>|<stringProp name="Argument.value">${{ github.event.inputs.mnemonic }}</stringProp>|g' src/test/jmeter/${{ github.event.inputs.jmeterJmx }}
          if [ "${{ github.event.inputs.jmeterJmx }}" = "swap.jmx" ]; then
            echo "to: ${{ env.to }}
            echo "payload: ${{ env.payload }}
            sed -i 's|<stringProp name="Argument.value">toAddress</stringProp>|<stringProp name="Argument.value">${{ env.to }}</stringProp>|g' src/test/jmeter/${{ github.event.inputs.jmeterJmx }}
            sed -i 's|<stringProp name="Argument.value">payloadValue</stringProp>|<stringProp name="Argument.value">${{ env.payload }}</stringProp>|g' src/test/jmeter/${{ github.event.inputs.jmeterJmx }}
          fi
          mvn jmeter:jmeter@configuration -DjmeterTest=${{ github.event.inputs.jmeterJmx }}
          sleep 15
          update_gist "stopTps"
          sleep 5
          update_gist "successRate10"
